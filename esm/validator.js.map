{"version":3,"file":"validator.js","sources":["../../src/validator.js"],"sourcesContent":["// @flow\n\nimport * as R from 'ramda'\n// $FlowFixMe\nimport { validate as validateSpec } from 'spected'\nimport { isNilOrEmpty, isNotNilOrEmpty } from './ramda-extra'\n\ntype MsgTmpl = string | (mixed => string)\ntype Rule = [(any) => boolean, MsgTmpl] // flowlint-line unclear-type:off\ntype RuleSet = Array<Rule>\ntype Spec = { [field: string]: RuleSet | Spec }\n\nconst renderMsg = (tmpl: MsgTmpl, arg: mixed): string =>\n  typeof tmpl === 'function' ? tmpl(arg) : tmpl\n\nconst rules = {\n  match: (\n    pattern: RegExp,\n    msg: MsgTmpl = `should match: ${String(pattern)}`\n  ) => [R.test(pattern), renderMsg(msg, pattern)],\n\n  minLength: (\n    length: number,\n    msg: MsgTmpl = `should have min length: ${length}`\n  ) => [\n    // flowlint-next-line sketchy-null-string:off\n    (val: ?string | Array<mixed> | null) => !!val && val.length >= length,\n    renderMsg(msg, length),\n  ],\n\n  notBlank: (msg: MsgTmpl = 'should not be blank') => [isNotNilOrEmpty, msg],\n}\n\nconst hasNoErrors = results => {\n  const shouldExclude = R.cond([\n    [isNilOrEmpty, R.T],\n    [R.is(Object), hasNoErrors],\n  ])\n  return R.pipe(R.reject(shouldExclude), R.isEmpty)(results)\n}\n\nconst defineValidator = ({ spec }: { spec: Spec }) => {\n  const validate = validateSpec(R.always(null), R.identity, spec)\n\n  return {\n    allValid: R.pipe(validate, hasNoErrors),\n    // flowlint-next-line unclear-type:off\n    checkField: (path: Array<string>, input: Object) =>\n      R.pipe(validate, R.path(path))(input),\n    checkAll: validate,\n  }\n}\n\nexport { defineValidator, rules }\n"],"names":["renderMsg","tmpl","arg","rules","pattern","msg","String","R","length","val","isNotNilOrEmpty","hasNoErrors","shouldExclude","isNilOrEmpty","Object","results","defineValidator","spec","validate","validateSpec","path","input"],"mappings":";;;;AAYA,IAAMA,YAAY,SAAZA,SAAY,CAACC,IAAD,EAAgBC,GAAhB;SAChB,OAAOD,IAAP,KAAgB,UAAhB,GAA6BA,KAAKC,GAAL,CAA7B,GAAyCD,IADzB;CAAlB;;AAGA,IAAME,QAAQ;SACL,eACLC,OADK;QAELC,GAFK,0FAE2BC,OAAOF,OAAP,CAF3B;WAGF,CAACG,IAAA,CAAOH,OAAP,CAAD,EAAkBJ,UAAUK,GAAV,EAAeD,OAAf,CAAlB,CAHE;GADK;;aAMD,mBACTI,MADS;QAETH,GAFS,oGAEiCG,MAFjC;WAGN,CAEH,UAACC,GAAD;aAAwC,CAAC,CAACA,GAAF,IAASA,IAAID,MAAJ,IAAcA,MAA/D;KAFG,EAGHR,UAAUK,GAAV,EAAeG,MAAf,CAHG,CAHM;GANC;;YAeF;QAACH,GAAD,uEAAgB,qBAAhB;WAA0C,CAACK,eAAD,EAAkBL,GAAlB,CAA1C;;CAfZ;;AAkBA,IAAMM,cAAc,SAAdA,WAAc,UAAW;MACvBC,gBAAgBL,IAAA,CAAO,CAC3B,CAACM,YAAD,EAAeN,CAAf,CAD2B,EAE3B,CAACA,EAAA,CAAKO,MAAL,CAAD,EAAeH,WAAf,CAF2B,CAAP,CAAtB;SAIOJ,IAAA,CAAOA,MAAA,CAASK,aAAT,CAAP,EAAgCL,OAAhC,EAA2CQ,OAA3C,CAAP;CALF;;AAQA,IAAMC,kBAAkB,SAAlBA,eAAkB,OAA8B;MAA3BC,IAA2B,QAA3BA,IAA2B;;MAC9CC,cAAWC,SAAaZ,MAAA,CAAS,IAAT,CAAb,EAA6BA,QAA7B,EAAyCU,IAAzC,CAAjB;;SAEO;cACKV,IAAA,CAAOW,WAAP,EAAiBP,WAAjB,CADL;;gBAGO,oBAACS,OAAD,EAAsBC,KAAtB;aACVd,IAAA,CAAOW,WAAP,EAAiBX,IAAA,CAAOa,OAAP,CAAjB,EAA+BC,KAA/B,CADU;KAHP;cAKKH;GALZ;CAHF;;;;"}