{"version":3,"file":"index.js","sources":["../../../src/redux/builders.js","../../../src/redux/core.js","../../../src/redux/form.js","../../../src/redux/item.js","../../../src/redux/list.js"],"sourcesContent":["import camelCase from 'lodash/camelCase'\nimport * as R from 'ramda'\nimport { createAction } from 'redux-actions'\n\nimport { argList, isNilOrEmpty, override } from '../ramda-extra'\n\nconst withPrefix = R.pipe(\n  argList,\n  R.ifElse(R.pipe(R.head, isNilOrEmpty), R.always(''), R.join('')),\n  R.concat\n)\n\nconst reducerLens = R.lensProp('reducers')\nconst selectorLens = R.lensProp('selectors')\n\nconst initial = state => R.assoc('initial', Object.freeze(state))\n\nconst action = (ns, name) =>\n  R.assocPath(\n    ['actions', camelCase(name)],\n    createAction(withPrefix(R.join('/', ns), '/')(name))\n  )\n\nconst actionGroup = (prefix, names) => config =>\n  R.reduce(\n    (acc, name) => action(config.namespace, name)(acc),\n    config,\n    R.isEmpty(prefix) ? names : R.map(withPrefix(prefix, '_'), names)\n  )\n\nconst handle = makeHandlers => config =>\n  R.over(reducerLens, override(makeHandlers(config)), config)\n\nconst select = makeSelectors => config =>\n  R.over(selectorLens, override(makeSelectors(config)), config)\n\nexport { action, actionGroup, handle, initial, reducerLens, select }\n","import debug from 'debug'\nimport * as R from 'ramda'\nimport { handleActions } from 'redux-actions'\nimport { reducerLens, select } from './builders'\n\nconst log = debug('ein:common:redux:core')\n\nconst DEFAULT_OPTIONS = {\n  namespace: [],\n  initial: {},\n  actions: {},\n  reducers: {},\n  selectors: {},\n}\n\nconst withNamespace = ns => R.assoc('namespace', ns)\n\nconst makeSelectors = ({ namespace: ns }) => ({\n  getState: R.path(ns),\n  getStateProp: key => R.path(R.append(key, ns)),\n})\n\nconst defineReducers = config =>\n  R.over(reducerLens, R.curry(handleActions)(R.__, config.initial), config)\n\nconst defineState = (namespace, builders) =>\n  R.pipe(\n    R.concat([withNamespace(namespace), select(makeSelectors)]),\n    R.reduce((config, builder) => builder(config), DEFAULT_OPTIONS),\n    R.tap(config => log('defineState:', config)),\n    defineReducers\n  )(builders)\n\nexport { defineState }\n","import * as R from 'ramda'\n\nimport { override } from '../ramda-extra'\nimport { defineValidator } from '../validator'\nimport { actionGroup, handle, initial, select } from './builders'\nimport { defineState } from './core'\n\nconst withForm = fields => ({\n  error: null,\n  fields,\n  fieldErrors: {},\n  pending: false,\n})\n\nconst withValidator = validator =>\n  R.assoc('validator', validator || defineValidator({ spec: {} }))\n\nconst makeHandlers = ({ actions, initial: initialState, validator }) => ({\n  [actions.formInput]: (state, { payload }) => {\n    const path = payload.field.split('.')\n    const fields = R.assocPath(path, payload.value, state.fields)\n    const errors = validator.checkField(path, fields)\n    const fieldErrors = R.assocPath(path, errors, state.fieldErrors)\n    return R.merge(state, { fields, fieldErrors })\n  },\n\n  [actions.formReset]: R.always(initialState),\n\n  [actions.formSubmitPending]: override({ error: null, pending: true }),\n  [actions.formSubmitComplete]: {\n    next: R.always(initialState),\n    throw: (state, { payload: error }) =>\n      R.merge(state, { error, pending: false }),\n  },\n})\n\nconst makeSelectors = ({ selectors, validator }) => {\n  const { getStateProp } = selectors\n\n  return {\n    getError: getStateProp('error'),\n    getFields: getStateProp('fields'),\n    getFieldErrors: getStateProp('fieldErrors'),\n    isPending: getStateProp('pending'),\n    isValid: R.pipe(getStateProp('fields'), validator.allValid),\n  }\n}\n\nconst defineFormState = (namespace, options = {}, extraBuilders = []) =>\n  defineState(\n    namespace,\n    R.concat(\n      [\n        initial(withForm(options.fields)),\n        actionGroup('FORM', ['INPUT', 'RESET']),\n        actionGroup('FORM_SUBMIT', ['REQUESTED', 'PENDING', 'COMPLETE']),\n        withValidator(options.validator),\n        handle(makeHandlers),\n        select(makeSelectors),\n      ],\n      extraBuilders\n    )\n  )\n\nexport { defineFormState }\n","import * as R from 'ramda'\nimport { actionGroup, handle, initial, select } from './builders'\nimport { defineState } from './core'\n\nconst initialItem = {\n  error: null,\n  item: null,\n  pending: false,\n}\n\nconst makeHandlers = ({ actions }) => ({\n  [actions.itemFetchPending]: R.merge(R.__, {\n    error: null,\n    item: null,\n    pending: true,\n  }),\n\n  [actions.itemFetchComplete]: {\n    next: (state, { payload: item }) =>\n      R.merge(state, {\n        error: null,\n        item,\n        pending: false,\n      }),\n\n    throw: (state, { payload: error }) =>\n      R.merge(state, { error, item: null, pending: false }),\n  },\n})\n\nconst makeSelectors = ({ selectors }) => {\n  const { getStateProp } = selectors\n\n  return {\n    getError: getStateProp('error'),\n    getItem: getStateProp('item'),\n    isPending: getStateProp('pending'),\n  }\n}\n\nconst defineItemState = (namespace, extraBuilders = []) =>\n  defineState(\n    namespace,\n    R.concat(\n      [\n        initial(initialItem),\n        actionGroup('ITEM_FETCH', ['REQUESTED', 'PENDING', 'COMPLETE']),\n        handle(makeHandlers),\n        select(makeSelectors),\n      ],\n      extraBuilders\n    )\n  )\n\nexport { defineItemState }\n","import * as R from 'ramda'\nimport { createSelector } from 'reselect'\n\nimport { normalizeBy, override } from '../ramda-extra'\nimport { actionGroup, handle, initial, select } from './builders'\nimport { defineState } from './core'\n\nconst initialList = {\n  error: null,\n  ids: [],\n  itemsMap: {},\n  pending: false,\n}\n\nconst handleListAssoc = (state, { payload: item }) => {\n  const hasCache = state.itemsMap[item.id] === item\n  return hasCache ? state : R.assocPath(['itemsMap', item.id], item, state)\n}\n\nconst handleListDissoc = (state, { payload: id }) =>\n  R.evolve(\n    {\n      ids: R.without([id]),\n      itemsMap: R.dissoc(id),\n    },\n    state\n  )\n\nconst handleListPrepend = (state, { payload: newItem }) =>\n  R.evolve(\n    {\n      ids: R.prepend(newItem.id),\n      itemsMap: R.assoc(newItem.id, newItem),\n    },\n    state\n  )\n\nconst handleListAppend = (state, { payload: newItem }) =>\n  R.evolve(\n    {\n      ids: R.append(newItem.id),\n      itemsMap: R.assoc(newItem.id, newItem),\n    },\n    state\n  )\n\nconst makeHandlers = ({ actions }) => ({\n  [actions.listPending]: override({ error: null, pending: true }),\n\n  [actions.listComplete]: {\n    next: (state, { payload: items }) => {\n      const { keys: ids, itemsByKey: itemsMap } = normalizeBy('id', items)\n      return R.merge(state, { error: null, pending: false, ids, itemsMap })\n    },\n\n    throw: (state, { payload: error }) =>\n      R.merge(state, { error, pending: false }),\n  },\n})\n\nconst makeSelectors = ({ selectors }) => {\n  const { getStateProp } = selectors\n\n  const basic = {\n    getError: getStateProp('error'),\n    getIds: getStateProp('ids'),\n    getItemsMap: getStateProp('itemsMap'),\n    isPending: getStateProp('pending'),\n  }\n\n  const getItemById = (id, state) =>\n    R.pipe(basic.getItemsMap, R.prop(id))(state)\n\n  const computed = {\n    getItems: createSelector([basic.getIds, basic.getItemsMap], R.props),\n    getItemById: R.curry(getItemById),\n  }\n\n  return R.merge(basic, computed)\n}\n\nconst defineListState = (namespace, extraBuilders = []) =>\n  defineState(\n    namespace,\n    R.concat(\n      [\n        initial(initialList),\n        actionGroup('LIST', ['REQUESTED', 'PENDING', 'COMPLETE']),\n        handle(makeHandlers),\n        select(makeSelectors),\n      ],\n      extraBuilders\n    )\n  )\n\nexport {\n  defineListState,\n  handleListAssoc,\n  handleListDissoc,\n  handleListAppend,\n  handleListPrepend,\n}\n"],"names":["withPrefix","R","argList","isNilOrEmpty","reducerLens","selectorLens","initial","state","action","ns","name","camelCase","createAction","actionGroup","prefix","names","acc","config","namespace","handle","override","makeHandlers","select","makeSelectors","log","debug","DEFAULT_OPTIONS","withNamespace","key","defineReducers","handleActions","defineState","builders","builder","withForm","withValidator","validator","defineValidator","spec","actions","initialState","formInput","payload","path","field","split","fields","value","errors","checkField","fieldErrors","formReset","formSubmitPending","error","pending","formSubmitComplete","selectors","getStateProp","allValid","defineFormState","options","extraBuilders","initialItem","itemFetchPending","itemFetchComplete","item","defineItemState","initialList","handleListAssoc","hasCache","itemsMap","id","handleListDissoc","handleListPrepend","newItem","handleListAppend","listPending","listComplete","items","normalizeBy","ids","keys","itemsByKey","basic","getItemById","getItemsMap","computed","createSelector","getIds","defineListState"],"mappings":"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"}