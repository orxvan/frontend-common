{"version":3,"file":"state.js","sources":["../../src/state.js"],"sourcesContent":["import camelCase from 'lodash/camelCase'\nimport R, { __, assoc, concat, merge, over, pipe, reduce } from 'ramda'\nimport { createAction, handleActions } from 'redux-actions'\nimport { createSelector } from 'reselect'\n\nimport { argList, isNilOrEmpty, normalizeBy, override } from './ramda-extra'\nimport { define as defineValidator } from './validator'\n\n// helper functions\nconst withPrefix = pipe(\n  argList,\n  R.ifElse(pipe(R.head, isNilOrEmpty), R.always(''), R.join('')),\n  concat\n)\n\nconst reducerLens = R.lensProp('reducers')\nconst selectorLens = R.lensProp('selectors')\n\n// builders\nconst DEFAULT_OPTIONS = {\n  namespace: {\n    domain: '',\n    path: [],\n  },\n  initial: {},\n  actions: {},\n  reducers: {},\n  selectors: {},\n}\n\nconst initial = state => assoc('initial', Object.freeze(state))\nconst withNamespace = ns => R.evolve({ namespace: override(ns) })\n\nconst defineAction = ({ domain }, name) =>\n  R.assocPath(\n    ['actions', camelCase(name)],\n    createAction(withPrefix(domain, '/')(name))\n  )\n\nconst actionGroup = (prefix, names) => config =>\n  reduce(\n    (acc, name) => defineAction(config.namespace, name)(acc),\n    config,\n    R.isEmpty(prefix) ? names : R.map(withPrefix(prefix, '_'), names)\n  )\n\nconst handle = makeHandlers => config =>\n  over(reducerLens, override(makeHandlers(config)), config)\n\nconst handleListActions = ({ actions }) => ({\n  [actions.listPending]: override({ error: null, pending: true }),\n\n  [actions.listComplete]: {\n    next: (state, { payload: items }) => {\n      const { keys: ids, itemsByKey: itemsMap } = normalizeBy('id', items)\n      return merge(state, { error: null, pending: false, ids, itemsMap })\n    },\n\n    throw: (state, { payload: error }) =>\n      merge(state, { error, pending: false }),\n  },\n})\n\nconst handleFormActions = ({ actions, initial: initialState, validator }) => ({\n  [actions.formInput]: (state, { payload }) => {\n    const path = payload.field.split('.')\n    const fields = R.assocPath(path, payload.value, state.fields)\n    const errors = validator.checkField(path, fields)\n    const fieldErrors = R.assocPath(path, errors, state.fieldErrors)\n    return merge(state, { fields, fieldErrors })\n  },\n\n  [actions.formReset]: R.always(initialState),\n\n  [actions.formSubmitPending]: override({ error: null, pending: true }),\n  [actions.formSubmitComplete]: {\n    next: R.always(initialState),\n    throw: (state, { payload: error }) =>\n      merge(state, { error, pending: false }),\n  },\n})\n\nconst select = makeSelectors => config =>\n  over(selectorLens, override(makeSelectors(config)), config)\n\nconst defineReducers = config =>\n  over(reducerLens, R.curry(handleActions)(__, config.initial), config)\n\n// states\nconst define = (namespace, builders) =>\n  pipe(\n    concat([\n      withNamespace(namespace),\n      select(({ namespace: ns }) => ({\n        getState: R.path(ns.path),\n        getStateProp: key => R.path(R.append(key, ns.path)),\n      })),\n    ]),\n    reduce((config, builder) => builder(config), DEFAULT_OPTIONS),\n    defineReducers\n  )(builders)\n\nconst makeForm = (namespace, options = {}, extraBuilders = []) =>\n  define(\n    namespace,\n    concat(\n      [\n        initial({\n          error: null,\n          fields: options.fields,\n          fieldErrors: {},\n          pending: false,\n        }),\n        actionGroup('FORM', ['INPUT', 'RESET']),\n        actionGroup('FORM_SUBMIT', ['REQUESTED', 'PENDING', 'COMPLETE']),\n        assoc('validator', options.validator || defineValidator({ spec: {} })),\n        handle(handleFormActions),\n        select(({ selectors, validator }) => {\n          const { getStateProp } = selectors\n\n          return {\n            getError: getStateProp('error'),\n            getFields: getStateProp('fields'),\n            getFieldErrors: getStateProp('fieldErrors'),\n            isPending: getStateProp('pending'),\n            isValid: pipe(getStateProp('fields'), validator.allValid),\n          }\n        }),\n      ],\n      extraBuilders\n    )\n  )\n\nconst makeList = (namespace, extraBuilders = []) =>\n  define(\n    namespace,\n    concat(\n      [\n        initial({ error: null, ids: [], itemsMap: {}, pending: false }),\n        actionGroup('LIST', ['REQUESTED', 'PENDING', 'COMPLETE']),\n        handle(handleListActions),\n        select(({ selectors }) => {\n          const { getStateProp } = selectors\n\n          const basic = {\n            getError: getStateProp('error'),\n            getIds: getStateProp('ids'),\n            getItemsMap: getStateProp('itemsMap'),\n            isPending: getStateProp('pending'),\n          }\n\n          const computed = {\n            getItems: createSelector(\n              [basic.getIds, basic.getItemsMap],\n              R.props\n            ),\n          }\n\n          return merge(basic, computed)\n        }),\n      ],\n      extraBuilders\n    )\n  )\n\nexport { actionGroup, define, handle, initial, makeForm, makeList, select }\n"],"names":["withPrefix","argList","isNilOrEmpty","reducerLens","selectorLens","DEFAULT_OPTIONS","initial","state","withNamespace","namespace","override","ns","defineAction","name","domain","camelCase","createAction","actionGroup","prefix","names","acc","config","handle","makeHandlers","handleListActions","actions","listPending","error","pending","listComplete","items","payload","normalizeBy","ids","keys","itemsMap","itemsByKey","handleFormActions","initialState","validator","formInput","path","field","split","fields","value","errors","checkField","fieldErrors","formReset","formSubmitPending","formSubmitComplete","select","makeSelectors","defineReducers","handleActions","define","builders","key","builder","makeForm","options","extraBuilders","defineValidator","spec","selectors","getStateProp","allValid","makeList","basic","computed","createSelector","getIds","getItemsMap"],"mappings":"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"}